; Auto-generated. Do not edit!


(cl:in-package flexbe_msgs-msg)


;//! \htmlinclude BehaviorSynthesisActionResult.msg.html

(cl:defclass <BehaviorSynthesisActionResult> (roslisp-msg-protocol:ros-message)
  ((header
    :reader header
    :initarg :header
    :type std_msgs-msg:Header
    :initform (cl:make-instance 'std_msgs-msg:Header))
   (status
    :reader status
    :initarg :status
    :type actionlib_msgs-msg:GoalStatus
    :initform (cl:make-instance 'actionlib_msgs-msg:GoalStatus))
   (result
    :reader result
    :initarg :result
    :type flexbe_msgs-msg:BehaviorSynthesisResult
    :initform (cl:make-instance 'flexbe_msgs-msg:BehaviorSynthesisResult)))
)

(cl:defclass BehaviorSynthesisActionResult (<BehaviorSynthesisActionResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <BehaviorSynthesisActionResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'BehaviorSynthesisActionResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name flexbe_msgs-msg:<BehaviorSynthesisActionResult> is deprecated: use flexbe_msgs-msg:BehaviorSynthesisActionResult instead.")))

(cl:ensure-generic-function 'header-val :lambda-list '(m))
(cl:defmethod header-val ((m <BehaviorSynthesisActionResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader flexbe_msgs-msg:header-val is deprecated.  Use flexbe_msgs-msg:header instead.")
  (header m))

(cl:ensure-generic-function 'status-val :lambda-list '(m))
(cl:defmethod status-val ((m <BehaviorSynthesisActionResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader flexbe_msgs-msg:status-val is deprecated.  Use flexbe_msgs-msg:status instead.")
  (status m))

(cl:ensure-generic-function 'result-val :lambda-list '(m))
(cl:defmethod result-val ((m <BehaviorSynthesisActionResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader flexbe_msgs-msg:result-val is deprecated.  Use flexbe_msgs-msg:result instead.")
  (result m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <BehaviorSynthesisActionResult>) ostream)
  "Serializes a message object of type '<BehaviorSynthesisActionResult>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'header) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'status) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'result) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <BehaviorSynthesisActionResult>) istream)
  "Deserializes a message object of type '<BehaviorSynthesisActionResult>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'header) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'status) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'result) istream)
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<BehaviorSynthesisActionResult>)))
  "Returns string type for a message object of type '<BehaviorSynthesisActionResult>"
  "flexbe_msgs/BehaviorSynthesisActionResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'BehaviorSynthesisActionResult)))
  "Returns string type for a message object of type 'BehaviorSynthesisActionResult"
  "flexbe_msgs/BehaviorSynthesisActionResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<BehaviorSynthesisActionResult>)))
  "Returns md5sum for a message object of type '<BehaviorSynthesisActionResult>"
  "d13a1c24e611f3c8aae59d09829d044b")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'BehaviorSynthesisActionResult)))
  "Returns md5sum for a message object of type 'BehaviorSynthesisActionResult"
  "d13a1c24e611f3c8aae59d09829d044b")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<BehaviorSynthesisActionResult>)))
  "Returns full string definition for message of type '<BehaviorSynthesisActionResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%BehaviorSynthesisResult result~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: flexbe_msgs/BehaviorSynthesisResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%# Provides feedback regarding possibly occured errors~%SynthesisErrorCodes error_code~%~%# Result of behavior synthesis as a list of state instantiations~%StateInstantiation[] states~%~%~%================================================================================~%MSG: flexbe_msgs/SynthesisErrorCodes~%int32 value~%~%# success~%int32 SUCCESS = 1~%~%# all other values will be considered as any sort of error~%================================================================================~%MSG: flexbe_msgs/StateInstantiation~%# Describes a single instantiation of a state~%~%# Path of this state inside the behavior~%# Last segment of the path is the name of this state~%# e.g. \"/Inner_Statemachine/This_State\"~%string state_path~%~%# Specifies the class implementing this state~%# Use one of the provided CLASS constants if this is not a primitive state~%# e.g. \"CalculationState\"~%string CLASS_STATEMACHINE 	= :STATEMACHINE~%string CLASS_CONCURRENCY 	= :CONCURRENCY~%string CLASS_PRIORITY 		= :PRIORITY~%string CLASS_BEHAVIOR 		= :BEHAVIOR~%string state_class~%~%~%~%# Only relevant for state machine, priority, and concurrency~%# Name of the initial state / state to be monitored~%string initial_state_name~%# Input and output keys (can be remapped below)~%string[] input_keys~%string[] output_keys~%~%# Only relevant for concurrency~%# Outcome conditions~%string[] cond_outcome~%OutcomeCondition[] cond_transition~%~%# Only relevant for behavior~%# Name of the class implementing this state~%string behavior_class~%~%# Only relevant for primitive state~%# List of parameter names and values of this state~%# Order of names and values has to match~%string[] parameter_names~%string[] parameter_values~%~%~%~%# Position of this state in the editor [x,y]~%float32[2] position~%~%# Outcomes of this state~%# Defines the order of the lists: transitions, autonomy~%string[] outcomes~%# Transition targets (state names or container outcomes) of the outcomes~%string[] transitions~%# Required autonomy level of the outcomes~%int8[] autonomy~%~%# Userdata of this state~%# Merges own input_keys and output_keys, no duplicates~%string[] userdata_keys~%# Remapping of the corresponding own key (= key used by container)~%string[] userdata_remapping~%================================================================================~%MSG: flexbe_msgs/OutcomeCondition~%# Defines a conjunction of required state outcomes in order to return a concurrency outcome~%string[] state_name~%string[] state_outcome~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'BehaviorSynthesisActionResult)))
  "Returns full string definition for message of type 'BehaviorSynthesisActionResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%Header header~%actionlib_msgs/GoalStatus status~%BehaviorSynthesisResult result~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: actionlib_msgs/GoalStatus~%GoalID goal_id~%uint8 status~%uint8 PENDING         = 0   # The goal has yet to be processed by the action server~%uint8 ACTIVE          = 1   # The goal is currently being processed by the action server~%uint8 PREEMPTED       = 2   # The goal received a cancel request after it started executing~%                            #   and has since completed its execution (Terminal State)~%uint8 SUCCEEDED       = 3   # The goal was achieved successfully by the action server (Terminal State)~%uint8 ABORTED         = 4   # The goal was aborted during execution by the action server due~%                            #    to some failure (Terminal State)~%uint8 REJECTED        = 5   # The goal was rejected by the action server without being processed,~%                            #    because the goal was unattainable or invalid (Terminal State)~%uint8 PREEMPTING      = 6   # The goal received a cancel request after it started executing~%                            #    and has not yet completed execution~%uint8 RECALLING       = 7   # The goal received a cancel request before it started executing,~%                            #    but the action server has not yet confirmed that the goal is canceled~%uint8 RECALLED        = 8   # The goal received a cancel request before it started executing~%                            #    and was successfully cancelled (Terminal State)~%uint8 LOST            = 9   # An action client can determine that a goal is LOST. This should not be~%                            #    sent over the wire by an action server~%~%#Allow for the user to associate a string with GoalStatus for debugging~%string text~%~%~%================================================================================~%MSG: actionlib_msgs/GoalID~%# The stamp should store the time at which this goal was requested.~%# It is used by an action server when it tries to preempt all~%# goals that were requested before a certain time~%time stamp~%~%# The id provides a way to associate feedback and~%# result message with specific goal requests. The id~%# specified must be unique.~%string id~%~%~%================================================================================~%MSG: flexbe_msgs/BehaviorSynthesisResult~%# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%~%# Provides feedback regarding possibly occured errors~%SynthesisErrorCodes error_code~%~%# Result of behavior synthesis as a list of state instantiations~%StateInstantiation[] states~%~%~%================================================================================~%MSG: flexbe_msgs/SynthesisErrorCodes~%int32 value~%~%# success~%int32 SUCCESS = 1~%~%# all other values will be considered as any sort of error~%================================================================================~%MSG: flexbe_msgs/StateInstantiation~%# Describes a single instantiation of a state~%~%# Path of this state inside the behavior~%# Last segment of the path is the name of this state~%# e.g. \"/Inner_Statemachine/This_State\"~%string state_path~%~%# Specifies the class implementing this state~%# Use one of the provided CLASS constants if this is not a primitive state~%# e.g. \"CalculationState\"~%string CLASS_STATEMACHINE 	= :STATEMACHINE~%string CLASS_CONCURRENCY 	= :CONCURRENCY~%string CLASS_PRIORITY 		= :PRIORITY~%string CLASS_BEHAVIOR 		= :BEHAVIOR~%string state_class~%~%~%~%# Only relevant for state machine, priority, and concurrency~%# Name of the initial state / state to be monitored~%string initial_state_name~%# Input and output keys (can be remapped below)~%string[] input_keys~%string[] output_keys~%~%# Only relevant for concurrency~%# Outcome conditions~%string[] cond_outcome~%OutcomeCondition[] cond_transition~%~%# Only relevant for behavior~%# Name of the class implementing this state~%string behavior_class~%~%# Only relevant for primitive state~%# List of parameter names and values of this state~%# Order of names and values has to match~%string[] parameter_names~%string[] parameter_values~%~%~%~%# Position of this state in the editor [x,y]~%float32[2] position~%~%# Outcomes of this state~%# Defines the order of the lists: transitions, autonomy~%string[] outcomes~%# Transition targets (state names or container outcomes) of the outcomes~%string[] transitions~%# Required autonomy level of the outcomes~%int8[] autonomy~%~%# Userdata of this state~%# Merges own input_keys and output_keys, no duplicates~%string[] userdata_keys~%# Remapping of the corresponding own key (= key used by container)~%string[] userdata_remapping~%================================================================================~%MSG: flexbe_msgs/OutcomeCondition~%# Defines a conjunction of required state outcomes in order to return a concurrency outcome~%string[] state_name~%string[] state_outcome~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <BehaviorSynthesisActionResult>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'header))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'status))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'result))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <BehaviorSynthesisActionResult>))
  "Converts a ROS message object to a list"
  (cl:list 'BehaviorSynthesisActionResult
    (cl:cons ':header (header msg))
    (cl:cons ':status (status msg))
    (cl:cons ':result (result msg))
))
